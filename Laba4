#include <iostream>
#include <conio.h>
#include <string>

using namespace std;


typedef struct {
	string subject;
	int mark;
} exam;
int prov(const char*, int);


class Faculty
{
public:
	Faculty();
	Faculty(string);
	void SetFaculty();
	void SetFaculty(string);
	void ShowFaculty();
	~Faculty();

private:
	string faculty;
};
Faculty::Faculty()
{
	faculty = "N/A";
}
Faculty::Faculty(string name)
{
	faculty = name;
}
void Faculty::ShowFaculty() {

	cout << "Faculty: " << faculty << endl;
}
void Faculty::SetFaculty( ) {

	cout << "Faculty: ";
	getline(cin, faculty,'\n');
	
}
void Faculty::SetFaculty(string faculty) {
	this->faculty = faculty;

}
Faculty::~Faculty()
{
}



class Student  {
public:
	Student();
	Student(string,string, int);
	void setInfo();
	void Show();
	void ShowStudent();
	void ChangeField();
	double StudentProgress();
	void SetName();
	 string GetName();
	void ChangeMarks();
	~Student();
private:
	Faculty faculty;
	string FIO;
	int Birth_Year;
	exam rezults[5];

};

Student::Student() {
	string subj[5] = { "Math","Physics","Economy","Programming","Foreign Language" };
	FIO = "N/A";
	Birth_Year=0;
	for (int i = 0; i < 5; i++) {
		rezults[i].subject =subj[i] ;
		rezults[i].mark = 0;
	}
}
Student::Student(string faculty,string name ,int year){
	this->faculty.SetFaculty(faculty);
	string subj[5] = { "Math","Physics","Economy","Programming","Foreign Language" };
	FIO =name;
	Birth_Year = year;
	
	for (int i = 0; i < 5; i++) {
		rezults[i].subject = subj[i];
		rezults[i].mark = 0;
	}
}
 string Student::GetName() {
	return FIO;

}
void Student::setInfo() {
	cout << "Enter FIO of a student: ";
	getline(cin, FIO, '\n');
	faculty.SetFaculty();
	Birth_Year = prov("Enter Birth year: ",2004);
	for (int i = 0; i < 5; i++) {
		cout << "Enter " << rezults[i].subject << " grade: ";
		rezults[i].mark = prov("", 10);
	}

}
void Student::Show(){
	cout << "Name: " << FIO<<endl;

}
Student::~Student() {

}
void Student::SetName() {
	cout << "Enter FIO of a student: ";
	getline(cin, FIO, '\n');
}
void Student::ShowStudent() {
	cout << "FIO: " << FIO << endl;
	faculty.ShowFaculty();
	if (Birth_Year == 0) {
		cout << "Birth: N/A" << endl;
	}
	else {
		cout << "Birth: " << Birth_Year << endl;
	}
	cout << "Exam marks:\n";
	for (int i = 0; i < 5; i++) {
		cout << rezults[i].subject << "- ";
		cout << rezults[i].mark << endl;
	}

}
double Student::StudentProgress() {
	double rez=0;
	for (int i = 0; i < 5; i++) {
		rez += rezults[i].mark;
	}
	return rez / 5;
}
void Student::ChangeMarks() {
	for (int i = 0; i < 5; i++) {
		cout << "Enter " << rezults[i].subject << " grade:";
		rezults[i].mark = prov("", 10);
	}

}
void Student::ChangeField() {
	bool kod = 1;
	do {
		ShowStudent();
		cout << "\n1-Name.\n2-Faculty.\n3-Birth year.\n4-Math grade.\n5-Physics grade\n6-Economy grade.\n7-Programming grade.\n8-Foreign Language.\n0-Stop editing.\n";
		int change = prov("Enter number of the field you want to change: ", 8);
		switch (change) {
		case 1: {
			cout << "Enter student's FIO: ";
			getline(cin, FIO, '\n');
			break; }
		case 2: {
			faculty.SetFaculty();
			break;	}
		case 3: {
			Birth_Year = prov("Enter Birth year: ", 2004);
			break;	}
		case 4: {
			rezults[0].mark = prov("Enter math grade: ", 10);
			break;	}
		case 5: {

			rezults[1].mark = prov("Enter physics grade: ", 10);
			break;	}
		case 6: {
			rezults[2].mark = prov("Enter economy grade: ", 10);
			break;	}
		case 7: {
			rezults[3].mark = prov("Enter programming grade: ", 10);
			break; }
		case 8: {
			rezults[4].mark = prov("Enter foreign Language grade: ", 10);
			break;	}
		case 0: {kod = 0;
			break; }
		default: {cout << "No field was selected to change." << endl;
		}
		}
		system("cls");
	} while (kod);
	ShowStudent();
}


int prov(const char* t,int size) {
	int x;
	cout << t;
	while (!(cin >> x) || x < 0 || x > size || cin.get() != '\n') {
		cout << "Invalid input. \nTry again.\n" << t;
		cin.clear();
		while (cin.get() != '\n');
	}

	return(x);
}

int main() {
	int size, change, kod = 0;
	int i = 0;
	size = prov( "Enter the number of students (less than 50): ",50);
	while(size == 0) {
		cout << "You have added 0 students, please enter number more than 0.\n";
		size = prov("Enter the number of students (less than 50): ", 50);
	}
	Student* List = new Student[size];
	do {
		system("pause");
		system("cls");
		cout << "  Choose option:\n"
			"1-Enter FIOs of the students.\n"
			"2-Enter new student info.\n"
			"3-Show list of students.\n"
			"4-Show info about one student\n"
			"5-Change exam marks of a student.\n"
			"6-Edit a student.\n"
			"7-Show progress of students.\n"
			"0-Close program." << endl;
		switch (_getch()) {
		case'1': {
			for (i = 0; i < size; i++) {
				if (List[i].GetName() == "N/A") {
					List[i].SetName();
					cout << endl;
				}
			}
			break; }
		case '2': {
			for (i = 0; i < size; i++) {
				cout << i+1 << ". ";
				List[i].Show();
				cout << endl;
			}
			change = prov("Enter the number of the student you want to change: ", size);
			List[change-1].setInfo();
			break; }
		case'3': {
			for (i = 0; i < size; i++) {
				cout << i+1 << ". ";
				List[i].Show();
				cout << endl;
			}
			break; }

		case '4': {
			for (i = 0; i < size; i++) {
				cout << i+1 << ". ";
				List[i].Show();
				cout << endl;
			}
			change = prov("Enter the number of the student you want to check: ", size);
			system("cls");
			List[change-1].ShowStudent();

			break; }
		case '5': {
			for (i = 0; i < size; i++) {
				cout << i + 1 << ". ";
				List[i].Show();
				cout << endl;
			}
			change = prov("Enter the number of the student you want to check: ", size);
			List[change - 1].ChangeMarks();
			break; }
		case '6': {
			for (i = 0; i < size; i++) {
				cout << i + 1 << ". ";
				List[i].Show();
				cout << endl;
			}
			change = prov("Enter the number of the student you want to edit : ", size);
			system("cls");
			List[change - 1].ChangeField();
			break; }
		case '7': {
			for (i = 0; i < size; i++) {
				cout << i + 1 << ". ";
				List[i].Show();
				cout << "Average grade per semester: " << List[i].StudentProgress();
				cout << endl;
			}

			
			break; }

		case'0': {cout << "Closing." << endl;
			delete[] List;
			kod = 1; }
		}

	} while (kod == 0);

}
